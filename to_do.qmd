

```{r}
#| include: false

source("_common.R")
```

# --------------------------------------

\index{latex@\LaTeX}
\index{}

# 칼럼 2개 --------------------------------------

::::: {.columns}

::: {.column width="47.5%"}
### R {.unnumbered}
```{r}
#| eval: false

```

:::

::: {.column width="5%"}

:::

::: {.column width="47.5%"}
### 파이썬 {.unnumbered}
```{python}
#| eval: false

```

:::
:::::

# WEBR --------------------------------------

:::{.panel-tabset}
### R 

```{webr-r}
#| label: 

```

### 파이썬

```{pyodide-python}
#| label: 

```

:::

# --------------------------------------

## 연습문제 {.unnumbered}

### 객관식 {.unnumbered}

::: {.content-visible when-format="revealjs"}

:::

### 서술형 {.unnumbered}

::: {.content-visible when-format="revealjs"}

:::

# --------------------------------------

```{.python include="dashboards/corona_dashboards_v1_book.qmd" code-line-numbers="true" start-line=8 end-line=41}
```


# --------------------------------------
Pyiodide로 requests 패키지를 사용하여 파일을 다운로드하고, 단어 빈도수를 계산하는 파이썬 코드입니다.

```{python}
import pyodide_js
await pyodide_js.loadPackage('requests')

import requests

url = "https://www.dr-chuck.com/py4inf/code/romeo.txt"
destination_file = "romeo.txt"

response = requests.get(url)
response.raise_for_status()  # This will raise an error for unsuccessful requests

with open(destination_file, 'wb') as file:
    file.write(response.content)

fhand = open("romeo.txt")

counts = dict()
for line in fhand:
    words = line.split()
    for word in words:
        if word not in counts:
            counts[word] = 1
        else:
            counts[word] += 1

print(counts)
```






